@model NoteViewModel
@{
    var title = "Notlar";
    ViewBag.Title = title;
}

@Html.Raw(bread.BreadCrumb(
    new List<Bc>() {
        new Bc("Dashboard", Url.Action("Index","Home")),
        new Bc(title , "")
    }
))

@Html.Raw(pageHeader.MainHeader(
    title,
    ""
))

<div class="content">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header header-elements-inline">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="input-group">
                                <a href="@Url.Action("Index","Note", new { createDate = Model.Date.AddDays(-1) })" class="btn btn-sm btn-secondary">Geri</a>
                                @Html.Raw(formHelper.InputDateRow("", Model.Date, "Date", "iDate"))
                                <a href="@Url.Action("Index","Note", new { createDate = Model.Date.AddDays(1) })" class="btn btn-sm btn-secondary">İleri</a>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" id="redirectInput" placeholder="Id Giriniz">
                                <button class="btn btn-light" type="button">Nota Git</button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="noteArea my-2">
                    @if (Model.Notes.Count > 0)
                    {
                        foreach (var item in Model.Notes)
                        {
                            <div class="note">
                                <div class="buttons-block">
                                    <span style="position:absolute; left:10px;">@Html.Raw(item.IsAlert ? "<i class='ph-alarm text-success'></i>" : "<i class='ph-alarm text-danger'></i>")</span>
                                    <span style="position:absolute; left:30px;">@Html.Raw(item.IsImportant ? "<i class='ph-circle-wavy-warning text-success'></i>" : "<i class='ph-circle-wavy-warning text-danger'></i>")</span>
                                    <span style="position:absolute; left:50px;"><a href="@Url.Action("Edit","Note", new { item.Id })"><i class="ph-note-pencil"></i></a></span>
                                    <span style="position:absolute; right:10px;"><a class="delete cursor-pointer" data-id="@item.Id"><i class="ph-eraser text-secondary"></i></a></span>
                                </div>
                                @Html.Raw(item.Description)
                            </div>
                        }
                    }
                </div>
                <div class="noteWrite">
                    <form asp-action="@ViewBag.Action" enctype="multipart/form-data"
                          data-ajax="true" data-ajax-method="POST"
                          data-ajax-success="OnFormSuccess">

                        <div class="form-group row mb-3 px-5">
                            <div class="col-lg-12 ">
                                <textarea name="Note.Description" id="contentText" class="form-control">@Model.Note.Description</textarea>
                            </div>
                        </div>
                        <div class="mb-2">
                        @Html.Raw(formHelper.SubmitButtonRow("Ekle"))
                        </div>

                        <input type="hidden" name="Date" value="@Model.Date" />

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <link href="https://www.tiny.cloud/css/codepen.min.css" rel="stylesheet" />
    <script src="https://cdn.tiny.cloud/1/owqrn7wz2kcl0dgwk1tzfaaxr300udaof6fh9rd14nhgqd6l/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        $(document).ready(function () {
            tinymce.init({
                selector: 'textarea#contentText',
                plugins: 'preview importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',
                toolbar: 'undo redo | bold italic | codesample',
                toolbar_sticky: true,
                importcss_append: true,
                height: 300,
                noneditable_noneditable_class: "mceNonEditable",
                toolbar_mode: 'sliding',
            });

            const dpStartDayElement = document.querySelector('.datepicker-start-day');
            if (dpStartDayElement) {
                const dpStartDay = new Datepicker(dpStartDayElement, {
                    container: '.content-inner',
                    buttonClass: 'btn',
                    prevArrow: document.dir == 'rtl' ? '&rarr;' : '&larr;',
                    nextArrow: document.dir == 'rtl' ? '&larr;' : '&rarr;',
                    weekStart: 1,
                    format: 'dd.mm.yyyy'
                });
            }
        });

        function OnFormSuccess(result) {
            if (result.isSucceed) {
                layout.success_action_message("Başarılı", result.message, "/Note/");
            }
            else {
                if (result.errors != null && result.errors.length > 0) {
                    layout.error_message_list("Hay Aksi", result.message, result.errors)
                }
                else {
                    layout.error_message("Hay Aksi", result.message);
                }
            }
        };

        const swalInit = swal.mixin({
            buttonsStyling: false,
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger',
                denyButton: 'btn btn-danger',
                input: 'form-control'
            }
        });

        $("body").on("click", ".btn-light", function(){
            var id = $("#redirectInput").val();
            console.log(id);
            
            if(id == "" || id == null || id == undefined) {
                swalInit.fire({
                    title: 'Geçersiz istek',
                    text: "Id boş bırakılamaz",
                    icon: 'warning',
                    confirmButtonText: 'Tamam',
                    buttonsStyling: false,
                    customClass: {
                        confirmButton: 'btn btn-success',
                    }
                });
                return false;
            }

            location.href="/Note/Edit/"+id;
        });

        $("body").on("click", ".delete", function () {
            var id = $(this).attr("data-id");
            layoutJsHelper.deleteItem("Note", id);
        });
    </script>
}